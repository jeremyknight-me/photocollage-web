@using PhotoCollage.Web.Helpers.Commands

@inject ICommandHandler<CreateLibraryCommand, int> createLibraryCommand

<EditForm Model="Model" OnValidSubmit="Submit" FormName="CreateLibrary">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="nameInput" class="form-label">Name</label>
        <InputText @bind-Value="Model!.Name" class="form-control" id="nameInput" maxlength="100" />
    </div>
    <div class="mb-3">
        <label for="descriptionInput" class="form-label">Description</label>
        <InputTextArea @bind-Value="Model!.Description" class="form-control" id="descriptionInput" />
    </div>

    <button type="submit" class="btn btn-primary">
        Create
    </button>
</EditForm>

@code {
    [Parameter]
    public EventCallback<int> OnLibraryCreated { get; set; }

    [SupplyParameterFromForm]
    private CreateLibraryForm? Model { get; set; }

    public void Reset()
        => this.Model = new();

    protected override void OnInitialized()
    {
        this.Model ??= new();
    }

    private async Task Submit()
    {
        var command = this.Model.ToCommand();
        var result = await this.createLibraryCommand.Handle(command);

        if (result.IsSuccess)
        {
            var id = result.Value;
            this.Reset();
            await this.OnLibraryCreated.InvokeAsync(id);
        }
    }
}
